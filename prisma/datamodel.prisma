type User {
  id: ID! @id
  email: String! @unique
  password: String!
  username: String
  firstName: String
  lastName: String
  avatar: String
  settings: Json
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Project {
  id: ID! @id
  name: String!
  description: String
  user: User!
  boards: [Board]
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Access {
  id: ID! @id
  project: Project!
  user: User!
  permissions: Json
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Board {
  id: ID! @id
  project: Project!
  name: String!
  description: String
  columns: [Column]
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Column {
  id: ID! @id
  board: Board!
  name: String!
  settings: Json
  cards: [Card]
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Card {
  id: ID! @id
  column: Column!
  user: User!
  priority: Priority!
  type: Type!
  name: String!
  description: String
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Doc {
  id: ID! @id
  project: Project!
  user: User!
  name: String!
  description: String
  content: String
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

enum Priority {
  Critical
  High
  Medium
  Low
}

enum Type {
  Task
  Bug
  Improvement
}
